예외처리
오류 - 컴파일 에러 와 런타임 에러
컴파일 에러 : 실행이 안됨
런타임 에러 : 실행도중에 발생하는 에러 ex) 0으로 나눌수없을때 

런타임 에러는  에러와 예외로 나뉜다.
에러 - 프로그램 코드에 의해서 수습될수 없는 심각한 오류
예외 - 코드에 수습될수있는 다소 미약한 오류 (개발자실수)
에러는 어쩔수없지만 , 예외는 처리 해야 한다.

예외처리 - 프로그램 실행 시 발생하는 있는 예외의 발생에 대비한 코드를 작성
비정상 종료를 막고 , 정상적인 실행상태를 유지 ( 예외상황은 뻥나는걸 방지하는것뿐임 실제로 고치는것이 아님 )

오류 
1. 에러(error) : 네트워크 장애 , 메모리 , 하드웨어 >> 개발자가 코드적으로 해결불가 
2. 예외(Exception e) : 개발자가 코드의 실수에 의해서 발생하는 것 >> 최종 코드 수정 >> 일단 방어책
>> 개발 ... 예외가 발생하면 ... 프로그램은 강제로 종료된다.
3. 예외처리 : 문제가 생길수 있는 코드에 안전장치 >> 문제가 발생하더라도 강제 종료가 되지 않고 일단 진행 
	비정상적인 종료를 막는다....
	
	try { 
		>> 문제가 발생할수있는 코드 의심  
		>> 예외가 발생하면 ... 
	} catch(Exception e) {
		>> 문제가 생기면 catch로 잡는다.
		>> 처리
		>> 1. 관리자에게 email 하기  
		>> 2. 로그파일에 문제를 기록한다.
		>> 3. 강제로 종료되는것을 막는다. 
		>> 4. 개발자가 해결해야 한다.  
	} finally {
		>> 문제가 발생하던 발생하지 않던 강제로 수행되어야 할 코드	
		>> ex)DB 연결 해제하기
	} 
	try - catch 적은게 좋다  왜? 코드량이 많아지니까
	차라리 써서 비정상종료를 막는것이 나을수도있다
	
	자바는 모든 클래스의 부모 Object 가 있다.
	
	object 에 Exception 와 Error 클래스가 있다.
	모든 예외처리의 부모를 만들었는데 Exception 이있는데
	모든 예외의 부모이다. 모든 자식들을 포함할수있다.
	어떤 자식이 들어와도 포옹하다.
	